* Притримуйтесь стайлкоду який обговорювався протягом усіх лекцій
* Стилізуйте кожну компоненту за допомогою бібліотеки Bootstrap
* Завантажте та використовуйте бібліотеку moment.js замість new Date()

* Всі компоненти мають бути функціональні

1. Створіть компоненту Header, використайте index.js доданий у цьому дз, проітеруйте NavbarData всередині Header.
   При кліку на будь який елемент у Navbar, компонента повинна змінювати свій background-color на рандомний колір.

2. Напишіть спеціальний перемикач який повиннен закривати\відкривати Navbar, коли перемикач закриває Navbar, то компонента Navbar
   повинна самотужки виводити в console.log повідомлення: i was closed at <дата коли закрився Navbar> (пам'ятайте про moment.js)

3. Створіть компоненту HistoryPerson та використайте в ній useReducer хук. створіть initState з полями: name, date, age, like.
   - Покажіть всі поля в JSX
   - Для поля age додайте функціонал в редюсер який при кліку на кнопку додає до віку персони 1 рік, 
   - Для поля like  додайте функціонал в редюсер який при кліку додає або віднімає лайк
 

4. Створіть компоненту Caching яка має наступний функціонал:
   - кнопку Rand1 при кліку на яку виводяться рандомні числа в діапазоні 1-5, за допомогою useCallback захешуйте функцію
     (через useEffect виведіть огорнуту функцію в useCallback через console.log)

   - кнопку Rand2 при кліку на яку виводяться рандомні числа в діапазоні 15-20, за допомогою useMemo захешуйте функцію
     (через useEffect виведіть огорнуту функцію в useMemo через console.log)

5. Створіть компоненту Input в якій за допомогою хука useRef в JSX виводяться введені дані з поля вводу.

6. Створіть компоненту Footer всередині якої за допомогою хуків useState, useEffect, useId() буде кнопка
   при кліку на яку NavbarData із index.js доданий у цьому дз буде до обєктів NavbarData додавати такі поля як id та updatedAt
   вивести нові дані в console.log